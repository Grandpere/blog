security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|uploads|js)/
            security: false
        main:
            anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\ApiTokenAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: web_articles_index
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 #30 days in seconds
            switch_user: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/activate/.+, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resend-token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/forgotten-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset-password/.+, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/account/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/articles/new, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/articles/.+/edit, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

        # require the user to fully login to change password
        #- { path: ^/change-password, roles: IS_AUTHENTICATED_FULLY }
        # if you wanted to force EVERY URL to be protected
        #- { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }

    role_hierarchy:
        ROLE_USER: [ROLE_CREATE_ARTICLE] #voir pour tags (et comment non anonyme?)
        ROLE_ADMIN: [ROLE_ADMIN_COMMENT, ROLE_ADMIN_ARTICLE, ROLE_ALLOWED_TO_SWITCH]
